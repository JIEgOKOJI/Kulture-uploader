#sleep 10
cframe1=1
frames=$2
fps1=30
#some shenanigans due to the way ffmpeg uses carriage returns
cat -v $1 | tr '^M' '\n' > $3_converted
#calculate percentage progress based on frames
cframe=( $(tac $3_converted | grep -m 1 frame= | awk '{print $1}' | cut -c 7-) )
if [ "$cframe" = "" ]; then
	cframe=( $(tac $3_converted | grep -m 1 frame= | awk '{print $2}') )
else
	cframe=$cframe1
fi
percent=$((100 * cframe / frames))
#calculate time left and taken etc
fps=( $(tac $3_converted | grep -m 1 frame= | awk '{print $3}') )
if [ "$fps" = "fps=" ]; then
	fps=( $(tac $3/log | grep -m 1 frame= | awk '{print $4}') )
else
	fps=$fps1
fi
total=$(( frames + cframe + percent + fps ))
#simple check to ensure all values are numbers
if [ $total -eq $total 2> /dev/null ]; then
	#all ok continue
	if [ "$fps" = "0" ]; then
		echo -ne "\rffmpeg: $cframe of $frames frames, progress: $percent"%" and ETA: error fps:0"
	else
		remaining=$(( frames - cframe ))
		seconds=$(( remaining / fps ))
		h=$(( seconds / 3600 ))
		m=$(( ( seconds / 60 ) % 60 ))
		s=$(( seconds % 60 ))
		echo -ne "\rffmpeg: $cframe of $frames frames, progress: $percent"%" and ETA: "$h"h "$m"m "$s"s"
	fi
else
	echo "Error, one of the values wasn't a number, trying again in 10s."
fi